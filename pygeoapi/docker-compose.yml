services:
  pygeoapi:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./config.yml:/pygeoapi/local.config.yml
      - ./html:/pygeoapi/data/html
    ports:
      - "5000:80"
    environment:
      - INT_API_TOKEN=token
      - PYGEOAPI_CONFIG=/pygeoapi/local.config.yml
      - PYGEOAPI_SERV_CONFIG=/pygeoapi/local.config.yml
      - DATABASE_HOST=postgis
      - DATABASE_PORT=5432
      - DATABASE_NAME=geoapi_db
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres

    depends_on:
      postgis-seed:
        condition: service_completed_successfully

  postgis:
    image: postgis/postgis:13-3.1
    container_name: postgis_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=geoapi_db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgis-seed:
    image: postgres:13-alpine
    container_name: postgis_seed
    volumes:
      - ./seed:/seed
    command: >
      sh -c "PGPASSWORD=postgres psql -h postgis -U postgres -d geoapi_db -f /seed/seed.sql"
    depends_on:
      postgis:
        condition: service_healthy
    

  #opensensemap_toolbox:
  #  build:
  #    context: .
  #    dockerfile: Dockerfile
  #  volumes:
  #    - ./data:/osm_toolbox/OpenSenseMapToolbox
  #    - ./osm_toolbox/OpenSenseMapToolbox:/osm_toolbox/OpenSenseMapToolbox
  #  environment:
  #    - DATABASE_URL=postgresql://postgres:postgres@postgis:5432/geoapi_db
  #  depends_on:
  #    - postgis


volumes:
  db_data: 