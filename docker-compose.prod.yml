services:
  caddy:
    image: caddy:2.9-alpine
    container_name: caddy
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    environment:
      - API_URL=${API_URL}
    volumes:
      - ./data:/data
      - ./config:/config
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./html:/usr/share/caddy/html

  pygeoapi:
    image: ghcr.io/reedu-reengineering-education/atrai-bikes-platform:main
    volumes:
      - ./html:/pygeoapi/data/html
    environment:
      - INT_API_TOKEN=${INT_API_TOKEN}
      - PYGEOAPI_CONFIG=${PYGEOAPI_CONFIG}
      - PYGEOAPI_SERV_CONFIG=${PYGEOAPI_SERV_CONFIG}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    depends_on:
      postgis-seed:
        condition: service_completed_successfully

  postgis-seed:
    image: postgres:17-alpine
    container_name: postgis_seed
    volumes:
      - ./seed:/seed
    command: >
      sh -c "PGPASSWORD=${DATABASE_PASSWORD} psql -h postgis -U ${DATABASE_USER} -d ${DATABASE_NAME} -f /seed/seed.sql"
    depends_on:
      postgis:
        condition: service_healthy

  postgis:
    image: postgis/postgis:17-3.5
    container_name: postgis_db
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data: 