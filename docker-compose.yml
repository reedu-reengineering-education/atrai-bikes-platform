services:
  pygeoapi:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./html:/pygeoapi/data/html
      - ./config.yml:/pygeoapi/local.config.yml
      - ./src:/pygeoapi/src
    ports:
      - 5000:80
    environment:
      - INT_API_TOKEN=${INT_API_TOKEN}
      - PYGEOAPI_CONFIG=${PYGEOAPI_CONFIG}
      - PYGEOAPI_SERV_CONFIG=${PYGEOAPI_SERV_CONFIG}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    depends_on:
      postgis-seed:
        condition: service_completed_successfully

  postgis-seed:
    image: postgres:17-alpine
    container_name: postgis_seed
    volumes:
      - ./seed:/seed
    command: >
      sh -c "PGPASSWORD=${DATABASE_PASSWORD} psql -h postgis -U ${DATABASE_USER} -d ${DATABASE_NAME} -f /seed/seed.sql"
    depends_on:
      postgis:
        condition: service_healthy

  postgis:
    platform: linux/x86_64
    image: postgis/postgis:17-3.5
    container_name: postgis_db
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    # volumes:
    #   - postgis_data:/var/lib/postgresql/data 
      # - ./postgres-config/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf

  jupyter:
    image: quay.io/jupyter/minimal-notebook:latest
    container_name: jupyter
    ports:
      - 8888:8888
    user: root
    environment:
      JUPYTER_ENABLE_LAB: "yes"
      JUPYTER_TOKEN: "docker"
      JUPYTER_ALLOW_INSECURE_WRITES: "true"
      NB_USER: "atrai" 
      CHOWN_HOME: "yes" 
      GRANT_SUDO: "yes" 
    volumes:
      - ./notebooks:/home/atrai
    depends_on:
      postgis-seed:
        condition: service_completed_successfully

volumes: 
  postgis_data:
